When would you want to use a remote repository rather than keeping all your work
local?

    When you want to share your work, either with users or with members of your team.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Other people's changes to the remote might step on your changes. It would be difficult
	to know what state your local repository was in if Git stayed up-to-date automatically.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    You create a branch when you want to change the code in a repository without changing the main line (master branch) of code.
	You clone a repository any time you need a working copy on your own machine.
	You fork someone else's repository when you want to make changes, but don't have permission to change their repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows you to work offline and still have the capability to compare and merge changes between
	your local repository and the last-known state of the remote.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    You can use other version control systems, like SVN or Mercurial, or you can
	collaborate using email and/or a bug tracker like Jira.
	Git and GitHub help make collaborating smoother by making it easier to make
	changes offline, and share them with others online.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
